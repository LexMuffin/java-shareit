create table if not exists users (
id bigint generated by default as identity not null,
name varchar(255) not null,
email varchar(512) not null,
constraint pk_user primary key (id),
constraint uq_user_email unique (email)
);

create table if not exists requests (
id bigint generated by default as identity not null,
description varchar(512) not null,
requestor_id bigint not null,
constraint pk_requests primary key (id),
constraint fk_requests_user foreign key (requestor_id) references users(id) on delete restrict
);

create table if not exists items (
id bigint generated by default as identity not null,
name varchar(255) not null,
description varchar(512) not null,
is_available boolean not null,
owner_id bigint not null,
request_id bigint null,
constraint pk_item primary key (id),
constraint fk_item_user foreign key (owner_id) references users(id) on delete cascade,
constraint fk_item_requests foreign key (request_id) references requests(id) on delete restrict
);

create table if not exists bookings (
id bigint generated by default as identity not null,
start_date timestamp without time zone not null,
end_date timestamp without time zone null,
item_id bigint not null,
booker_id bigint not null,
status varchar(20) not null,
constraint pk_bookings primary key (id),
constraint fk_bookings_item foreign key (item_id) references items(id) on delete cascade,
constraint fk_bookings_booker foreign key (booker_id) references users(id) on delete restrict
);

create table if not exists comments (
id bigint generated by default as identity not null,
text varchar(512) not null,
item_id bigint not null,
author_id bigint not null,
created timestamp without time zone not null,
constraint pk_comments primary key (id),
constraint fk_comments_item foreign key (item_id) references items(id) on delete cascade,
constraint fk_comments_author foreign key (author_id) references users(id) on delete restrict
);